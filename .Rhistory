library(fixest)
#Teste placebo----
modelo_placebo <- log(abstencao) ~
log(competitividade) + log(pib_pc) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + i(ano, tratamento, ref= 2022) | id_municipio + ano
modelsummary(list(
feols(modelo_placebo, data = df %>% filter(turno == 1)),
feols(modelo_placebo, data = df %>% filter(turno == 2))
))
modelsummary(list(
feols(modelo_placebo, data = df %>% filter(turno == 1)),
feols(modelo_placebo, data = df %>% filter(turno == 2))
), stars = TRUE)
df$tratamento
modelsummary(list(
feols(modelo_placebo, data = df %>% filter(turno == 1)),
feols(modelo_placebo, data = df %>% filter(turno == 2))
), stars = TRUE)
#Teste placebo----
modelo_placebo <- log(abstencao) ~
log(competitividade) + log(pib_pc) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + i(ano, tratamento, ref= 2006) | id_municipio + ano
modelsummary(list(
feols(modelo_placebo, data = df %>% filter(turno == 1)),
feols(modelo_placebo, data = df %>% filter(turno == 2))
), stars = TRUE)
df %>%
mutate(incluso = ifelse(distancia < 1000, 1, 0),
grupo = ifelse((tratamento == 1 & incluso == 1), "Tratamento",
ifelse((tratamento == 0 & incluso == 1), "Controle", "Não incluso")))
#Teste placebo----
modelo_placebo <- log(abstencao) ~
log(competitividade) + log(pib_pc) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + i(ano, tratamento, ref= 2006) | id_municipio + ano
modelsummary(list(
feols(modelo_placebo, data = df %>% filter(turno == 1)),
feols(modelo_placebo, data = df %>% filter(turno == 2))
), stars = TRUE)
df <- df %>%
mutate(incluso = ifelse(distancia < 1000, 1, 0),
grupo = ifelse((tratamento == 1 & incluso == 1), "Tratamento",
ifelse((tratamento == 0 & incluso == 1), "Controle", "Não incluso")))
#Teste placebo----
modelo_placebo <- log(abstencao) ~
log(competitividade) + log(pib_pc) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + i(ano, tratamento, ref= 2006) | id_municipio + ano
modelsummary(list(
feols(modelo_placebo, data = df %>% filter(turno == 1)),
feols(modelo_placebo, data = df %>% filter(turno == 2))
), stars = TRUE)
df <- df %>%
mutate(incluso = ifelse(distancia < 150, 1, 0),
grupo = ifelse((tratamento == 1 & incluso == 1), "Tratamento",
ifelse((tratamento == 0 & incluso == 1), "Controle", "Não incluso")))
#Teste placebo----
modelo_placebo <- log(abstencao) ~
log(competitividade) + log(pib_pc) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + i(ano, tratamento, ref= 2006) | id_municipio + ano
modelsummary(list(
feols(modelo_placebo, data = df %>% filter(turno == 1)),
feols(modelo_placebo, data = df %>% filter(turno == 2))
), stars = TRUE)
df <- df %>%
mutate(incluso = ifelse(distancia < 150, 1, 0),
tratamento = incluso * tratamento)
#Teste placebo----
modelo_placebo <- log(abstencao) ~
log(competitividade) + log(pib_pc) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + i(ano, tratamento, ref= 2006) | id_municipio + ano
modelsummary(list(
feols(modelo_placebo, data = df %>% filter(turno == 1)),
feols(modelo_placebo, data = df %>% filter(turno == 2))
), stars = TRUE)
df <- df %>%
mutate(incluso = ifelse(distancia < 150, 1, 0)) %>%
filter(incluso == 1)
#Teste placebo----
modelo_placebo <- log(abstencao) ~
log(competitividade) + log(pib_pc) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + i(ano, tratamento, ref= 2006) | id_municipio + ano
modelsummary(list(
feols(modelo_placebo, data = df %>% filter(turno == 1)),
feols(modelo_placebo, data = df %>% filter(turno == 2))
), stars = TRUE)
#Propensity score matching ----
df.psm <- read_csv("psm.csv") %>%
left_join(df %>% filter(ano == 2022) %>% select(id_municipio, tratamento, turno)) %>%
left_join(df %>% filter(ano == 2018) %>% select(id_municipio, abstencao, turno) %>% rename("abstencao_2018" = "abstencao")) %>%
left_join(df %>% filter(ano <2022) %>% group_by(id_municipio) %>%
summarize(abstencao = mean(abstencao), competitividade = mean(competitividade), pib_pc = mean(pib_pc),
beneficiados = mean(beneficiados), pib_governo = mean(pib_governo),
eleitores_secao = mean(eleitores_secao), tratamento = max(tratamento))) %>%
mutate(populacao_urbana = populacao_urbana/populacao) %>%
drop_na()
modelo_psm <- tratamento ~ razao_dependencia + taxa_envelhecimento + expectativa_anos_estudo +
taxa_analfabetismo_18_mais + indice_gini + prop_pobreza_extrema + log(renda_pc) + idhm +
taxa_desocupacao_18_mais  + taxa_agua_encanada + log(populacao) + populacao_urbana + abstencao_2018 +
log(abstencao) + log(competitividade) + log(pib_pc) + log(beneficiados) + pib_governo + eleitores_secao
#Propensity score matching ----
df.psm <- read_csv("psm.csv") %>%
left_join(df %>% filter(ano == 2022) %>% select(id_municipio, tratamento, turno)) %>%
left_join(df %>% filter(ano == 2018) %>% select(id_municipio, abstencao, turno) %>% rename("abstencao_2018" = "abstencao")) %>%
left_join(df %>% filter(ano <2022) %>% group_by(id_municipio) %>%
summarize(abstencao = mean(abstencao), competitividade = mean(competitividade), pib_pc = mean(pib_pc),
beneficiados = mean(beneficiados), pib_governo = mean(pib_governo),
eleitores_secao = mean(eleitores_secao), tratamento = max(tratamento))) %>%
mutate(populacao_urbana = populacao_urbana/populacao) %>%
drop_na()
modelo_psm <- tratamento ~ razao_dependencia + taxa_envelhecimento + expectativa_anos_estudo +
taxa_analfabetismo_18_mais + indice_gini + prop_pobreza_extrema + log(renda_pc) + idhm +
taxa_desocupacao_18_mais  + taxa_agua_encanada + log(populacao) + populacao_urbana + abstencao_2018 +
log(abstencao) + log(competitividade) + log(pib_pc) + log(beneficiados) + pib_governo + eleitores_secao
#Estimação do propensity
summary(glm(modelo_psm, data = df.psm, family = binomial(link = 'logit')))
modelo_psm <- tratamento ~ taxa_envelhecimento + taxa_analfabetismo_18_mais + indice_gini + prop_pobreza_extrema + log(renda_pc) + idhm +
taxa_desocupacao_18_mais  + log(populacao) + populacao_urbana + log(abstencao) + log(pib_pc) + log(beneficiados) + eleitores_secao + abstencao_2018
match.1t <- matchit(
modelo_psm,
data=df.psm %>% filter(turno == 1), link="probit", replace = T)
library(MatchIt)
match.1t <- matchit(
modelo_psm,
data=df.psm %>% filter(turno == 1), link="probit", replace = T)
match.2t <- matchit(
modelo_psm,
data=df.psm %>% filter(turno == 2), link="probit", replace = T)
#Resultado do balanceamento
plot(match.1t,type="density",interactive=FALSE)
plot(match.2t,type="density",interactive=FALSE)
df.1t <- match.1t %>%
get_matches(distance = "propscore", data=df.psm %>% filter(turno == 1)) %>%
select(id_municipio) %>%
left_join(df %>% filter(turno == 1))
df.2t <- match.2t %>%
get_matches(distance = "propscore", data=df.psm %>% filter(turno == 2)) %>%
select(id_municipio) %>%
left_join(df %>% filter(turno == 2))
bind_rows(df.1t, df.2t) %>%
write_csv("output/data_psm.csv")
#Teste placebo depois do PSM
modelsummary(list(
feols(modelo_placebo, data = df.1t),
feols(modelo_placebo, data = df.2t)
))
#Estimação do DD----
modelo.1 <- log(abstencao) ~
log(competitividade) + log(pib_pc) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + passe_livre | id_municipio + ano
feols.m1.1t <- feols(modelo.1, data = df.1t)
feols.m1.2t <- feols(modelo.1, data = df.2t)
#Estimação do DD----
modelo.1 <- log(abstencao) ~
log(competitividade) + log(pib_pc) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + tratamento * (ano == 2022) | id_municipio + ano
feols.m1.1t <- feols(modelo.1, data = df.1t)
#Estimação do DD----
modelo.1 <- log(abstencao) ~
log(competitividade) + log(pib_pc) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + tratamento : (ano == 2022) | id_municipio + ano
feols.m1.1t <- feols(modelo.1, data = df.1t)
feols.m1.2t <- feols(modelo.1, data = df.2t)
modelo.2 <- log(abstencao) ~
log(competitividade) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + passe_livre * log(pib_pc) | id_municipio + ano
feols.m2.1t <- feols(modelo.2, data = df.1t)
feols.m2.2t <- feols(modelo.2, data = df.2t)
modelo.3 <- log(abstencao) ~
log(competitividade) + ideb + log(beneficiados) + log(pib_pc) +
log(pib_governo) + log(eleitores_secao) +
passe_livre : factor(ntile(pib_pc,5)) | id_municipio + ano
feols.m3.1t <- feols(modelo.3, data = df.1t)
feols.m3.2t <- feols(modelo.3, data = df.2t)
modelsummary(list(
feols.m1.1t,
feols.m2.1t,
feols.m3.1t
))
#Estimação do DD----
modelo <- log(abstencao) ~
log(competitividade) + log(pib_pc) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + tratamento : (ano == 2022) | id_municipio + ano
feols.1t <- feols(modelo, data = df.1t)
feols.2t <- feols(modelo, data = df.2t)
modelsummary(list(
feols.1t,
feols.2t
))
summary(feols.1t)
summary(feols.2t)
modelsummary(list(
feols.1t,
feols.2t
), stars = T)
summary(feols.2t)
summary(feols.1t)
#Teste placebo depois do PSM
modelsummary(list(
feols(modelo_placebo, data = df.1t),
feols(modelo_placebo, data = df.2t)
))
modelsummary(list(
feols(modelo_placebo, data = df %>% filter(turno == 1 & ano != 2022)),
feols(modelo_placebo, data = df %>% filter(turno == 2 & ano != 2022))
), stars = TRUE)
#Teste placebo depois do PSM
modelsummary(list(
feols(modelo_placebo, data = df.1t %>% filter(ano != 2022)),
feols(modelo_placebo, data = df.2t %>% filter(ano != 2022))
))
#Estimação do DD----
modelo <- log(abstencao) ~
log(competitividade) + log(pib_pc) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + tratamento : (ano == 2022) | id_municipio + ano
feols.1t <- feols(modelo, data = df.1t)
feols.2t <- feols(modelo, data = df.2t)
modelsummary(list(
feols.1t,
feols.2t
), stars = T)
setwd("C:/git/passe-livre")
library(readr)
library(tidyverse)
library(plm)
library(MatchIt)
library(modelsummary)
library(fixest)
library(modelsummary)
formals(modelsummary)$stars <- TRUE
df <- read_csv("output/data.csv")
#Teste placebo----
modelo_placebo <- log(abstencao) ~
log(competitividade) + log(pib_pc) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + i(ano, tratamento, ref= 2022) | id_municipio + ano
modelsummary(list(
feols(modelo_placebo, data = df %>% filter(turno == 1)),
feols(modelo_placebo, data = df %>% filter(turno == 2))
))
#Propensity score matching ----
df.psm <- read_csv("output/psm.csv") %>%
left_join(df %>% filter(ano == 2022) %>% select(id_municipio, tratamento, turno)) %>%
left_join(df %>% filter(ano == 2018) %>% select(id_municipio, abstencao, turno) %>% rename("abstencao_2018" = "abstencao")) %>%
left_join(df %>% filter(ano <2022) %>% group_by(id_municipio) %>%
summarize(abstencao = mean(abstencao), competitividade = mean(competitividade), pib_pc = mean(pib_pc),
beneficiados = mean(beneficiados), pib_governo = mean(pib_governo),
eleitores_secao = mean(eleitores_secao), tratamento = max(tratamento))) %>%
mutate(populacao_urbana = populacao_urbana/populacao) %>%
drop_na()
modelo_psm <- tratamento ~ razao_dependencia + taxa_envelhecimento + expectativa_anos_estudo +
taxa_analfabetismo_18_mais + indice_gini + prop_pobreza_extrema + log(renda_pc) + idhm +
taxa_desocupacao_18_mais  + taxa_agua_encanada + log(populacao) + populacao_urbana + abstencao_2018 +
log(abstencao) + log(competitividade) + log(pib_pc) + log(beneficiados) + pib_governo + eleitores_secao
#Estimação do propensity
summary(glm(modelo_psm, data = df.psm, family = binomial(link = 'logit')))
modelo_psm <- tratamento ~ taxa_envelhecimento + taxa_analfabetismo_18_mais + indice_gini + prop_pobreza_extrema + log(renda_pc) + idhm +
taxa_desocupacao_18_mais  + log(populacao) + populacao_urbana + log(abstencao) + log(pib_pc) + log(beneficiados) + eleitores_secao + abstencao_2018
match.1t <- matchit(
modelo_psm,
data=df.psm %>% filter(turno == 1), link="probit", replace = T)
match.2t <- matchit(
modelo_psm,
data=df.psm %>% filter(turno == 2), link="probit", replace = T)
#Resultado do balanceamento
plot(match.1t,type="density",interactive=FALSE)
plot(match.2t,type="density",interactive=FALSE)
df.1t <- match.1t %>%
get_matches(distance = "propscore", data=df.psm %>% filter(turno == 1)) %>%
select(id_municipio) %>%
left_join(df %>% filter(turno == 1))
df.2t <- match.2t %>%
get_matches(distance = "propscore", data=df.psm %>% filter(turno == 2)) %>%
select(id_municipio) %>%
left_join(df %>% filter(turno == 2))
bind_rows(df.1t, df.2t) %>%
write_csv("output/data_psm.csv")
#Teste placebo depois do PSM
modelsummary(list(
feols(modelo_placebo, data = df.1t),
feols(modelo_placebo, data = df.2t)
))
#Estimação do DD----
modelo.1 <- log(abstencao) ~
log(competitividade) + log(pib_pc) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + passe_livre | id_municipio + ano
feols.m1.1t <- feols(modelo.1, data = df.1t)
feols.m1.2t <- feols(modelo.1, data = df.2t)
modelo.2 <- log(abstencao) ~
log(competitividade) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + passe_livre * log(pib_pc) | id_municipio + ano
feols.m2.1t <- feols(modelo.2, data = df.1t)
feols.m2.2t <- feols(modelo.2, data = df.2t)
modelo.3 <- log(abstencao) ~
log(competitividade) + ideb + log(beneficiados) + log(pib_pc) +
log(pib_governo) + log(eleitores_secao) +
passe_livre : factor(ntile(pib_pc,5)) | id_municipio + ano
feols.m3.1t <- feols(modelo.3, data = df.1t)
feols.m3.2t <- feols(modelo.3, data = df.2t)
modelsummary(list(
feols.m1.1t,
feols.m2.1t,
feols.m3.1t
))
modelo.3 <- log(abstencao) ~
log(competitividade) + ideb + log(beneficiados) + log(pib_pc) +
log(pib_governo) + log(eleitores_secao) +
passe_livre : factor(ntile(pib_pc,4)) | id_municipio + ano
feols.m3.1t <- feols(modelo.3, data = df.1t)
feols.m3.2t <- feols(modelo.3, data = df.2t)
modelsummary(list(
feols.m1.1t,
feols.m2.1t,
feols.m3.1t
))
modelo.3 <- log(abstencao) ~
log(competitividade) + ideb + log(beneficiados) + log(pib_pc) +
log(pib_governo) + log(eleitores_secao) +
passe_livre : factor(ntile(pib_pc,8)) | id_municipio + ano
feols.m3.1t <- feols(modelo.3, data = df.1t)
feols.m3.2t <- feols(modelo.3, data = df.2t)
modelsummary(list(
feols.m1.1t,
feols.m2.1t,
feols.m3.1t
))
ceofplot(feols.m3.1t)
modelo.3 <- log(abstencao) ~
log(competitividade) + ideb + log(beneficiados) + log(pib_pc) +
log(pib_governo) + log(eleitores_secao) +
passe_livre : factor(ntile(pib_pc,5)) | id_municipio + ano
feols.m3.1t <- feols(modelo.3, data = df.1t)
feols.m3.2t <- feols(modelo.3, data = df.2t)
modelsummary(list(
feols.m1.1t,
feols.m2.1t,
feols.m3.1t
))
modelsummary(list(
feols.m1.2t,
feols.m2.2t,
feols.m3.2t
))
modelsummary(list(
feols.m1.1t,
feols.m1.2t
))
modelsummary(list(
feols.m2.1t,
feols.m2.2t
))
modelsummary(list(
feols.m1.1t,
feols.m1.2t
))
modelsummary(list(
feols.m2.1t,
feols.m2.2t
))
modelsummary(list(
feols.m3.1t,
feols.m3.2t
))
#Estimação do DD----
modelo.1 <- log(abstencao) ~
log(competitividade) + log(pib_pc) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + passe_livre | id_municipio + ano
#Teste placebo depois do PSM
modelsummary(list(
feols(modelo_placebo, data = df.1t),
feols(modelo_placebo, data = df.2t)
))
modelsummary(list(
feols.m2.1t,
feols.m2.2t
))
library(readr)
library(tidyverse)
library(geobr)
library(ggplot2)
library(sf)
windowsFonts(A = windowsFont("Times New Roman"))
modelo.2 <- log(abstencao) ~
log(competitividade) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + passe_livre * log(pib_pc) | id_municipio + ano
feols.m2.1t <- feols(modelo.2, data = df.1t %>% filter(ano %in% c(2018, 2022)))
feols.m2.2t <- feols(modelo.2, data = df.2t %>% filter(ano %in% c(2018, 2022)))
modelsummary(list(
feols.m2.1t,
feols.m2.2t
))
modelo.2 <- log(abstencao) ~
log(competitividade) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + passe_livre * log(pib_pc) |  ano
feols.m2.1t <- feols(modelo.2, data = df.1t %>% filter(ano %in% c(2018, 2022)))
feols.m2.2t <- feols(modelo.2, data = df.2t %>% filter(ano %in% c(2018, 2022)))
modelsummary(list(
feols.m2.1t,
feols.m2.2t
))
modelo.2 <- log(abstencao) ~
log(competitividade) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + log(pib_pc) | ano
feols.m2.1t <- feols(modelo.2, data = df.1t %>% filter(tratamento == 0))
feols.m2.2t <- feols(modelo.2, data = df.2t %>% filter(tratamento == 0))
modelsummary(list(
feols.m2.1t,
feols.m2.2t
))
modelo.2 <- log(abstencao) ~
log(competitividade) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + log(pib_pc) | id_municipio + ano
feols.m2.1t <- feols(modelo.2, data = df.1t %>% filter(tratamento == 0))
feols.m2.2t <- feols(modelo.2, data = df.2t %>% filter(tratamento == 0))
modelsummary(list(
feols.m2.1t,
feols.m2.2t
))
#Teste placebo depois do PSM
modelsummary(list(
feols(modelo_placebo, data = df.1t),
feols(modelo_placebo, data = df.2t)
))
modelo.2 <- abstencao ~
log(competitividade) + ideb + log(beneficiados) +
log(pib_governo) + log(eleitores_secao) + passe_livre * log(pib_pc) | id_municipio + ano
feols.m2.1t <- feols(modelo.2, data = df.1t)
feols.m2.2t <- feols(modelo.2, data = df.2t)
modelsummary(list(
feols.m2.1t,
feols.m2.2t
))
cor(df$ideb, df$pib_pc)
cor(df$ideb, df$pib_pc, na.rm = T)
cor(df$ideb, df$pib_pc)
cor(df$ideb, df$pib_pc)
cor(df$ideb, df$pib_pc, na.rm = T)
cor(df$ideb, df$pib_pc, use = "complete.obs")
modelo.2 <- log(abstencao) ~
log(competitividade) + log(beneficiados) + log(pib_pc) +
log(pib_governo) + log(eleitores_secao) + passe_livre * ideb  | id_municipio + ano
feols.m2.1t <- feols(modelo.2, data = df.1t)
feols.m2.2t <- feols(modelo.2, data = df.2t)
modelsummary(list(
feols.m2.1t,
feols.m2.2t
))
carlos <- log(abstencao) ~
log(competitividade) + log(beneficiados)  + ideb
log(pib_governo) + log(eleitores_secao) + passe_livre * log(pib_pc)  | id_municipio + ano
carlos.1 <- feols(modelo.2, data = df.1t)
carlos.2 <- feols(modelo.2, data = df.2t)
robson <- log(abstencao) ~
log(competitividade) + log(beneficiados) + log(pib_pc) +
log(pib_governo) + log(eleitores_secao) + passe_livre * ideb  | id_municipio + ano
robson.1 <- feols(modelo.2, data = df.1t)
robson.2 <- feols(modelo.2, data = df.2t)
modelsummary(list(
carlos.1,
carlos.2,
robson.1,
robson.2
))
log(pib_governo) + log(eleitores_secao) + passe_livre * log(pib_pc)  | id_municipio + ano
carlos.1 <- feols(modelo.2, data = df.1t)
carlos.2 <- feols(modelo.2, data = df.2t)
robson <- log(abstencao) ~
log(competitividade) + log(beneficiados) + log(pib_pc) +
log(pib_governo) + log(eleitores_secao) + passe_livre * ideb  | id_municipio + ano
robson.1 <- feols(modelo.2, data = df.1t)
robson.2 <- feols(modelo.2, data = df.2t)
modelsummary(list(
carlos.1,
carlos.2,
robson.1,
robson.2
))
carlos <- log(abstencao) ~
log(competitividade) + log(beneficiados)  + ideb
log(pib_governo) + log(eleitores_secao) + passe_livre * log(pib_pc)  | id_municipio + ano
carlos.1 <- feols(carlos, data = df.1t)
carlos.2 <- feols(carlos, data = df.2t)
robson <- log(abstencao) ~
log(competitividade) + log(beneficiados) + log(pib_pc) +
log(pib_governo) + log(eleitores_secao) + passe_livre * ideb  | id_municipio + ano
robson.1 <- feols(robson, data = df.1t)
robson.2 <- feols(robson, data = df.2t)
modelsummary(list(
carlos.1,
carlos.2,
robson.1,
robson.2
))
carlos.1
carlos <- log(abstencao) ~
log(competitividade) + log(beneficiados)  + ideb +
log(pib_governo) + log(eleitores_secao) + passe_livre * log(pib_pc)  | id_municipio + ano
carlos.1 <- feols(carlos, data = df.1t)
carlos.2 <- feols(carlos, data = df.2t)
robson <- log(abstencao) ~
log(competitividade) + log(beneficiados) + log(pib_pc) +
log(pib_governo) + log(eleitores_secao) + passe_livre * ideb  | id_municipio + ano
robson.1 <- feols(robson, data = df.1t)
robson.2 <- feols(robson, data = df.2t)
modelsummary(list(
carlos.1,
carlos.2,
robson.1,
robson.2
))
df.psm
df.psm %>% arrange(pib_pc)
df.psm %>% arrange(pib_pc)
df.psm %>% arrange(pib_pc)
df.1t %>% arrange(pib_pc)
